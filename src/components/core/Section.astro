---
import type { PageSection } from "@/content/page.types";
import { markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import Button from "../LinkButton.astro";

export type Section = PageSection;
export type Props = {
  section: Section;
};



const { section } = Astro.props;
if (!section) {
  throw new Error("Section data is required");
}
const { title, buttons, image, content, image_position, nombre } = section;


const image_position_classes = (() => {
  if (!image && !image_position) {
    return ["", "col-12 ", ""];
  }

  if (image) {
    switch (image_position) {
      case "top":
        return ["flex-row-reverse ", "col-12 ", "col-12 mb-4 lg:mb-0 "];
      case "bottom":
        return ["", "col-12", "col-12"];
      case "left":
        return [

          "flex-row-reverse ",
          "col-12 md:col-7 lg:col-6 ",
          "col-12 md:col-5 lg:col-6",

        ];
      case "right":
      default:
        return ["", "col-12 md:col-7 lg:col-6 ", "col-12 md:col-5 lg:col-6 "];
    }
  } else {
    return ["", "col-12 ", ""];
  }
})();



const texto_modificado = nombre.replaceAll(" ", "#")
console.log("image_position_classes[2]",texto_modificado)
---

<section id={texto_modificado} class=`${image_position ? 'bg-blue-200' : ''}  section relative`>
  <div class="container " >
    <div
      class=` row items-center ${image_position ? 'custom-position ' : ''} ${image_position_classes[0]} `
    >
    <h1 class="mt-6" set:html={markdownify(title)} />
    {

      image && image_position != "top" && (

        <div class={`${image_position_classes[2]} `}>

          <Image
            class=" object-contain mt-20 transition-transform duration-300 transform hover:scale-110"
            alt="section-image"
            src={image}
            width={600}
            height={600}
          />
        </div>
      )

    }
       {
        image && image_position != "top" && (
          <div class={`${image_position_classes[2]}`}>

             <p class="mt-6" set:html={markdownify(content)} />
             {
          buttons && buttons.length > 0 && (
            <div class="flex flex-wrap mt-8">
              {buttons.map((button) => (
                <Button {...button} />
              ))}
            </div>
          )
        }
          </div>


        )
      }


      <div class=`${image_position_classes[1]} `>





      </div>

    </div>
  </div>
</section>
